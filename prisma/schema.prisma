datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  name          String?
  notes         Note[]
  folders       Folder[]
  collaborations Collaboration[]
  noteVersions  NoteVersion[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Folder {
  id         Int      @id @default(autoincrement())
  name       String
  owner      User     @relation(fields: [ownerId], references: [id])
  ownerId    Int
  parentId   Int?
  parent     Folder?  @relation("FolderChildren", fields: [parentId], references: [id])
  children   Folder[] @relation("FolderChildren")
  notes      Note[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Note {
  id            Int           @id @default(autoincrement())
  title         String
  content       String        @default("")
  owner         User          @relation(fields: [ownerId], references: [id])
  ownerId       Int
  folder        Folder?       @relation(fields: [folderId], references: [id])
  folderId      Int?
  isDeleted     Boolean       @default(false)
  versions      NoteVersion[]
  collaborations Collaboration[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Collaboration {
  id        Int      @id @default(autoincrement())
  note      Note     @relation(fields: [noteId], references: [id])
  noteId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  role      String   @default("editor")
  createdAt DateTime @default(now())
}

model NoteVersion {
  id        Int      @id @default(autoincrement())
  note      Note     @relation(fields: [noteId], references: [id])
  noteId    Int
  content   String
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  createdAt DateTime @default(now())
}